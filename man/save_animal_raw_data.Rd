% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neurojam-db.R
\name{save_animal_raw_data}
\alias{save_animal_raw_data}
\title{Save raw signal data per animal}
\usage{
save_animal_raw_data(mat_l, con, animal, project, phase = "",
  source_filename = "", source_dirname = "", rdata_filename = NULL,
  rdata_dirname = "animal_rdata",
  animal_raw_data_table = "animal_raw_data", overwrite = FALSE,
  verbose = FALSE, ...)
}
\arguments{
\item{mat_l}{\code{list} object output from \code{import_ephys_mat_1()}
which should contain all relevant channel data, along with
time step, index, and event tables, as available and relevant.}

\item{con}{database connection with class \code{DBIConnection},
for example produced from \code{DBI::dbConnect()}. The database
can be of any type compatible with \code{DBI}, for example
\code{dbConnect(RMySQL::MySQL())} produces an object of
class \code{MySQLConnection} which extends \code{DBIConnection}.}

\item{animal}{character string indicating the animal associated
with the \code{mat_l} data.}

\item{project}{character string with the project name, used to
differentiate raw data between projects.}

\item{phase}{character string indicating the project phase,
used to differentiate raw data between different phases
of the same project.}

\item{source_filename}{character string with the filename
used to produce \code{mat_l}}

\item{source_dirname}{character string with the file path to
the \code{source_filename}.}

\item{rdata_filename}{character string of the \code{RData} file
to create, by default when \code{NULL} a filename is created
based upon the animal, project, and phase.}

\item{rdata_dirname}{character string with the file path
location to save the output \code{RData} file.}

\item{animal_raw_data_table}{character string with the
database table name to store data, inside the connection
\code{con}.}

\item{overwrite}{logical indicating whether to overwrite
any existing \code{RData} file. When \code{overwrite=FALSE} and
the \code{RData} file exists, no save will be performed
to the database connection \code{con}, nor to the file system.}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are passed to \code{ephys_short_name()},
specifically \code{max_nchar_word} controls the length of
words retained in output filenames.}
}
\description{
Save raw signal data per animal
}
\details{
This function stores the output from \code{import_ephys_mat_1()}
as an \code{RData} file, with annotation stored
in a relational database table that points to the
\code{RData} file.

The \code{RData} file name is derived from the arguments:
\code{animal}, \code{project}, \code{phase}, \code{source_filename}, and
\code{source_dirname}. Each value is sent to \code{ephys_short_name()}
which creates a shorter abbrevation, then non-blank
values are concatenated using \code{"_"} underscore delimiter.
If this output does not produce a unique name for a
large set of files, there are two options:
\enumerate{
\item Make the \code{source_filename} input value unique before
calling \code{save_animal_raw_data()}, or
\item Use \code{...} to send arguments to \code{ephys_short_name()},
specifically \code{max_nchar_word=4} which by default keeps
the first 4 characters of each detected word. Increasing
this number may result in more unique filenames, at the
expense of longer filenames.
}

In general two fields should enforce uniqueness:
\code{"animal"} and \code{"source_filename"}. An exception to
this rule is when an experiment run is split across
two files, which may occur if the instrument is
interrupted in the middle of an experiment run.
}
\examples{
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:");

}
\seealso{
Other jam database functions: \code{\link{ephys_short_name}},
  \code{\link{extract_event_data}},
  \code{\link{get_animal_event_data}},
  \code{\link{get_animal_event_derived}},
  \code{\link{get_animal_raw_data}},
  \code{\link{save_animal_event_data}},
  \code{\link{save_animal_event_derived}}
}
\concept{jam database functions}
