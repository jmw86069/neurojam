% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neurojam-matrix.R
\name{freq_heatmap}
\alias{freq_heatmap}
\title{Heatmap of frequency-time (psd) matrix}
\usage{
freq_heatmap(x, quantile_max = 0.99, col = getColorRamp("Reds", lens =
  2, n = 25), row_label_n = 25, column_label_n = 25,
  row_range = NULL, column_range = NULL, flip = c("y"),
  row_split = NULL, row_split_width = NULL, row_split_at = NULL,
  row_split_names = NULL, column_split = NULL,
  column_split_width = NULL, column_split_at = NULL,
  column_split_names = NULL, border = TRUE, row_title_rot = 0,
  name = "psd", ...)
}
\arguments{
\item{x}{numeric matrix containing frequency rows, and time
columns, where the \code{rownames(x)} and \code{colnames(x)} are character
representations of the numeric values. In future this function
may use \code{attributes(x)} or separate function arguments.}

\item{quantile_max}{numeric value usually between 0.8 and 0.99,
representing the quantile used for the color ramp maximum. This
setting \code{0.99} is useful when data may have extremely large
outlier values, that could otherwise obscure the range of
numeric values.}

\item{col}{argument passed to \code{ComplexHeatmap::Heatmap()} to
define the color ramp. When \code{col} is a function, it is assumed
to conform to expectations of \code{ComplexHeatmap::Heatmap()},
specifically that output should mimic the output from
\code{circlize::colorRamp2()}.}

\item{row_label_n, column_label_n}{numeric value passed to
\code{discretize_labels()} indicating the target number of labels
to display for rows and columns, respectively.}

\item{row_range}{optional numeric range used to subset the
heatmap rows where the numeric range is matched with the numeric
values in \code{rownames(x)}. The heatmap is built, and \code{row_split}
is defined as necessary, before the data is subsetted, in
order to make sure the row split is applied relative to the
input data.}

\item{column_range}{optional numeric range used to subset the
heatmap rows, where the numeric range is matched with the numeric
values in \code{colnames(x)}. The heatmap is built, and \code{column_split}
is defined as necessary, before the data is subsetted, in
order to make sure the column split is applied relative to the
input data.}

\item{flip}{character value indicating whether to flip the y-axis,
when \code{flip="y"}.}

\item{row_split}{vector of length \code{ncol(x)} whose values are
used to split the heatmap by row When supplied, all
other \code{row_split_} arguments are ignored.}

\item{row_split_width}{numeric value used to define \code{row_split}
with a fixed number of rows per split.}

\item{row_split_at}{numeric vector indicating where to split
the heatmap by row, based upon the numeric values of the rownames.}

\item{row_split_names}{optional vector of names used to label
each heatmap row group. The names are assigned in order, and
are not recycled. Therefore, any additional row splits will
use the original integer row split number.}

\item{column_split}{vector of length \code{ncol(x)} whose values are
used to split the heatmap by column. When supplied, all
other \code{column_split_} arguments are ignored.}

\item{column_split_width}{numeric value used to define \code{column_split}
with a fixed number of columns per split.}

\item{column_split_at}{numeric vector indicating where to split
the heatmap by column, based upon the numeric values of the colnames.}

\item{column_split_names}{optional vector of names used to label
each heatmap column group. The names are assigned in order, and
are not recycled. Therefore, any additional column splits will
use the original integer column split number.}

\item{border, row_title_rot, name}{arguments passed to
\code{ComplexHeatmap::Heatmap()} defined here to provide
suitable recommended default values
which differ from the Heatmap default.}

\item{...}{additional arguments are passed to
\code{ComplexHeatmap::Heatmap()}}
}
\value{
\code{Heatmap} object returned by \code{ComplexHeatmap::Heatmap()}.
}
\description{
Heatmap of frequency-time (psd) matrix
}
\details{
This function takes a numeric matrix of frequency rows,
and time columns, and produces a heatmap showing the
power spectral density (psd), using \code{ComplexHeatmap::Heatmap()}.

All customizations from \code{ComplexHeatmap::Heatmap()}
are available by passing arguments to \code{...}.

This function has some arguments intended to make it easier
to split rows and columns, as needed.
}
\examples{

#freq_heatmap(im,
#   row_split_at=c(6.1, 7.4, 8.7),
#   row_split_names=c("low", "low theta", "high theta", "high"))

}
\seealso{
Other jam matrix functions: \code{\link{condense_freq_matrix}},
  \code{\link{cutIntoChunks}},
  \code{\link{discretize_labels}}

Other jam heatmap functions: \code{\link{discretize_labels}}
}
\concept{jam heatmap functions}
\concept{jam matrix functions}
